2-element Vector{Polynomial{DynamicPolynomials.Commutative{DynamicPolynomials.CreationOrder}, Graded{LexOrder}, Int64}}:
 7 + 18x + 15y² + 54xy + 9xy² + 6y⁴ + 27xy³
 6 + 3y²

1-element Vector{Polynomial{DynamicPolynomials.Commutative{DynamicPolynomials.CreationOrder}, Graded{LexOrder}, Int64}}:
 1

3-element Vector{Polynomial{DynamicPolynomials.Commutative{DynamicPolynomials.CreationOrder}, Graded{LexOrder}, Polynomial{DynamicPolynomials.Commutative{DynamicPolynomials.CreationOrder}, Graded{LexOrder}, Int64}}}:
 (6 - b) + (3)y²
 (-3 + 9b + 3a - 2b²) + (9 - 27b - 9a + 6b²)y + (-171b + 27b²)x
 (3 - 9b - 3a + 2b²) + (9b)x + (27b)xy
3-element Vector{Polynomial{DynamicPolynomials.Commutative{DynamicPolynomials.CreationOrder}, Graded{LexOrder}, Int64}}:
 6 + 3y²
 -3 + 9y
 3
true






julia> F = [x2^2 + x3, x2*x3, (x1^2 + x2)*x1*x2*x3 + 1]
3-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 x2^2 + x3
 x2*x3
 x1^3*x2*x3 + x1*x2^2*x3 + 1

julia> GG = evaluate.(groebner([z .* (Y .- F) ; (1-z).*Y]), Ref([z]), Ref([1]))
19-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 x3^3*y3 - x3^2*y1*y3 + y2^2*y3
 x3^3*y2 - x3^2*y1*y2 + y2^3
 x3^3*y1 - x3^2*y1^2 + y1*y2^2
 x2*y2*y3 + x3^2*y3 - x3*y1*y3
 x2*y2^2 + x3^2*y2 - x3*y1*y2
 x2*y1*y2 + x3^2*y1 - x3*y1^2
 x2*x3*y3 - y2*y3
 x2*x3*y2 - y2^2
 x2*x3*y1 - y1*y2
 x2^2*y3 + x3*y3 - y1*y3
 x2^2*y2 + x3*y2 - y1*y2
 x2^2*y1 + x3*y1 - y1^2
 x1^3*y2*y3 - x1*x3^2*y3 + x1*x3*y1*y3 - y3^2 + y3
 x1^3*y2^2 - x1*x3^2*y2 + x1*x3*y1*y2 - y2*y3 + y2
 x1^3*y1*y2 - x1*x3^2*y1 + x1*x3*y1^2 - y1*y3 + y1
 x1^3*x3^2*y3 - x1^3*x3*y1*y3 + x1*x3*y2*y3 - x1*y1*y2*y3 + x2*y3^2 - x2*y3
 x1^3*x3^2*y2 + x1*x3*y2^2 - x2*y2 - x3^2*y3 + x3*y1
 x1^3*x3^2*y1 - x1^3*x3*y1^2 + x1*x3*y1*y2 - x1*y1^2*y2 + x2*y1*y3 - x2*y1
 x1^3*y2 + x1*x2*y2 - y3 + 1

julia> groebner(Y .- F)
6-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 x3^3 - x3^2*y1 + y2^2
 x2*y2 + x3^2 - x3*y1
 x2*x3 - y2
 x2^2 + x3 - y1
 x1^3*y2 - x1*x3^2 + x1*x3*y1 - y3 + 1
 x1^3*x3^2 - x1^3*x3*y1 + x1*x3*y2 - x1*y1*y2 + x2*y3 - x2

julia> G = groebner(Y .- F)
6-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 x3^3 - x3^2*y1 + y2^2
 x2*y2 + x3^2 - x3*y1
 x2*x3 - y2
 x2^2 + x3 - y1
 x1^3*y2 - x1*x3^2 + x1*x3*y1 - y3 + 1
 x1^3*x3^2 - x1^3*x3*y1 + x1*x3*y2 - x1*y1*y2 + x2*y3 - x2

julia> evaluate.(G, Ref(Y), Ref([0, 0, 0]))
6-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 x3^3
 x3^2
 x2*x3
 x2^2 + x3
 -x1*x3^2 + 1
 x1^3*x3^2 - x2

